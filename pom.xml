<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.6</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    
    <groupId>stevenjdh</groupId>
    <artifactId>covid-tracker</artifactId>
    <version>1.0.0</version>
    <name>covid-tracker</name>
    <description>Tracks the number of infected cases with the Covid-19 virus.</description>
    
    <properties>
        <java.version>11</java.version>
        <maven.compiler.release>${java.version}</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.showDeprecation>true</maven.compiler.showDeprecation>
        <maven.compiler.showWarnings>true</maven.compiler.showWarnings>
        <argLine>-Dfile.encoding=${project.build.sourceEncoding}</argLine>
        <start-class>stevenjdh.covidtracker.CovidTrackerApplication</start-class>
        <!-- SonarCloud Indexing and Code Coverage Sources -->
        <sonar.sources>src/main/java,src/main/resources/templates</sonar.sources>
        <!-- JaCoCo Properties -->
        <jacoco.version>0.8.7</jacoco.version>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.coverage.jacoco.xmlReportPaths>${project.build.directory}/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
        <sonar.language>java</sonar.language>
        <!-- SonarCloud Links -->
        <sonar.links.homepage>https://github.com/StevenJDH/covid-tracker</sonar.links.homepage>
        <sonar.links.ci>https://github.com/StevenJDH/covid-tracker/actions</sonar.links.ci>
        <sonar.links.issue>https://github.com/StevenJDH/covid-tracker/issues</sonar.links.issue>
        <sonar.links.scm>https://github.com/StevenJDH/covid-tracker</sonar.links.scm>
    </properties>
    
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <!-- Declaring version with security patches for commons-csv. -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>2.1.210</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.9.0</version>
            <exclusions>
                <exclusion>
                    <!-- Excluding vulnerable 1.4.200 version. -->
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                </exclusion>
            </exclusions> 
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <configuration>
                        <goalPrefix>sonar</goalPrefix>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <layers>
                        <enabled>true</enabled>
                    </layers>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <release>${java.version}</release>
                    <compilerArgument>-Xlint:unchecked</compilerArgument>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-site</id>
                        <phase>package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>PACKAGE</element>
                                    <limits>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.0</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.github.git-commit-id</groupId>
                <artifactId>git-commit-id-maven-plugin</artifactId>
                <version>5.0.0</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                        <phase>initialize</phase>
                    </execution>
                    <execution>
                        <id>validate-the-git-infos</id>
                        <goals>
                          <goal>validateRevision</goal>
                        </goals>
                    <phase>verify</phase>
                  </execution>
                </executions>
                <configuration>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <format>properties</format>
                    <!-- Set <commitIdGenerationMode> to 'full' if <format> is set to 'json'. -->
                    <commitIdGenerationMode>flat</commitIdGenerationMode>
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
                    <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
                    <dateFormatTimeZone>UTC</dateFormatTimeZone>
                    <failOnNoGitDirectory>false</failOnNoGitDirectory>
                    <offline>true</offline>
                    <!-- <includeOnlyProperties>
                    </includeOnlyProperties> -->
                    <excludeProperties>
                        <excludeProperty>git.user.*</excludeProperty>
                        <excludeProperty>^git.build.user.(email|name)$</excludeProperty>
                        <excludeProperty>^git.commit.user.(email|name)$</excludeProperty>
                        <excludeProperty>^git.commit.message.(short|full)$</excludeProperty>
                    </excludeProperties>
                    <injectAllReactorProjects>true</injectAllReactorProjects>
                    <validationProperties>
                      <!-- Verify that the project version does not end with '-SNAPSHOT'. -->
                      <!-- May need <injectAllReactorProjects> set to 'true' to read POM. -->
                      <validationProperty>
                        <name>validating project version</name>
                        <value>${project.version}</value>
                        <!-- We could also use: <shouldMatchTo>^[0-9\.]*$</shouldMatchTo> -->
                        <shouldMatchTo><![CDATA[^.*(?<!-SNAPSHOT)$]]></shouldMatchTo>
                      </validationProperty>
                    </validationProperties>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>